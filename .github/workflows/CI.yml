# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run logging-pipeline CI

on:
  workflow_dispatch: # For manual triggering
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:

  pre-checks:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install spellchecker
        run: |
          npm install -g cspell@8.19.4
      - uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46
        id: changed-files
        with:
          separator: ","
      - name: Run spellchecker
        run: |
          # Run spellchecker with changed files
          mapfile -d ',' -t added_modified_files < <(printf '%s,' '${{ steps.changed-files.outputs.all_changed_and_modified_files }}')
          cspell --config cspell.json --color --show-suggestions "${added_modified_files[@]}"

      - name: Install python tools
        run: |
          pip install ruff bandit
      - name: Run formatter
        run: |
          ruff format --check
      - name: Run linter
        run: |
          set -e
          ruff check
          bandit -c pyproject.toml -r .

  docker:
    needs:
      - pre-checks
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    container:
      image: python:${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image:
          - 3.8-bookworm
          - 3.9-bookworm
          - 3.10-bookworm
          - 3.11-bookworm
          - 3.12-bookworm
          - 3.13-bookworm
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 75
          fetch-tags: true

      - name: Set up environment
        run: |
          FirstHeading="$(sed -n '/^## / { s/^## //; p; }' CHANGELOG.md | head -n 1)"
          LOGGING_PIPELINE_VERSION="$(echo "$FirstHeading" | sed -n '/^[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*/ p')"
          echo "LOGGING_PIPELINE_VERSION=$LOGGING_PIPELINE_VERSION" >> $GITHUB_ENV

          if [ -z "$LOGGING_PIPELINE_VERSION" ] ; then
            DO_RELEASE=false
          else
            case "${{ github.repository }}@${{ github.event.ref }}-${{ matrix.image }}" in
              Spacetown/logging_pipeline@refs/heads/main-3.13-bookworm)    DO_RELEASE=true ;;
              *)                                                           DO_RELEASE=false ;;
            esac
          fi
          echo "DO_RELEASE=$DO_RELEASE" >> $GITHUB_ENV

      - name: Create new tag without pushing to get the correct name of the wheel
        if: ${{ env.LOGGING_PIPELINE_VERSION != '' }}
        run: |
          git config --global --add safe.directory $PWD

          # Set git user info
          git config --global user.email "40258682+spacetown@users.noreply.github.com"
          git config --global user.name "Michael FÃ¶rderer"

          # Create the tag and print the output. Do not push.
          git tag -a -m "$LOGGING_PIPELINE_VERSION ($(date -I))" $LOGGING_PIPELINE_VERSION
          git tag --list -n "$LOGGING_PIPELINE_VERSION"

      - name: Install dependencies
        run: |
          pip install build twine ruff bandit

      - name: Build package
        run: |
          python -m build

      - name: Build package
        run: |
          twine check dist/*

      - name: Run tests
        run: |
          tests/run_tests.sh

      - name: Generate release notes
        run: |
          sed -n "/## $(sed -n '/^## / { s/^## //; p; }' CHANGELOG.md | head -n 1)/, /## / { /## /! p; }" CHANGELOG.md > RELEASE_NOTES.md

      - name: Upload distribution
        if: ${{ env.DO_RELEASE == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/**

      - name: Push new tag
        if: ${{ env.DO_RELEASE == 'true' }}
        run: |
          git push origin refs/tags/$LOGGING_PIPELINE_VERSION

      - name: Create release and upload build artifacts
        if: ${{ env.DO_RELEASE == 'true' }}
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191
        with:
          tag_name: ${{ env.LOGGING_PIPELINE_VERSION }}
          body_path: RELEASE_NOTES.md
          files: dist/*

      - name: Publish to PyPi
        if: ${{ env.DO_RELEASE == 'true' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*
